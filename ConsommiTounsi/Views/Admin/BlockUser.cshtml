@model ConsommiTounsi.Models.BlockUserModel
@{
    ViewBag.Title = "BlochUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Block User</h2>
@{ ConsommiTounsi.Models.UserRegisterModel user = (ConsommiTounsi.Models.UserRegisterModel)Session["User"];}
@if (user != null)
{
    if (user.role == "Admin")
    {

        <div class="">
            <div class="page-title">
                <div class="title_left">
                    <h3>Update Admin</h3>
                </div>

            </div>
            <div class="clearfix"></div>
            <div class="row">
                <div class="col-md-12 col-sm-12 ">
                    <div class="x_panel">
                        <div class="x_title">
                            <h2>Block user <small> insert block ending date :</small></h2>
                            <div class="clearfix"></div>
                        </div>
                        <div class="x_content">
                            <br />

                            @using (Html.BeginForm("BlockUser", "Admin", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal form-label-left", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                 
                                @Html.TextBoxFor(m => m.userId, new { @class = "form-control", @placeholder = "First Name", @type = "hidden" })


                                <div class="item form-group">
                                    <label class="col-form-label col-md-3 col-sm-3 label-align">
                                       Ending block date : <span class="required">*</span>
                                    </label>
                                    <div class="col-md-6 col-sm-6 ">
                                        @Html.TextBoxFor(m => m.Blockdate, new { @id = "blockdate", @class = "date-picker form-control", @type = "text", @onfocus = "this.type='date'", @onclick = "this.type='date'", @onblur = "this.type='text'", @onmouseout = "timeFunctionLong(this)" })
                                        @Html.ValidationMessageFor(m => m.Blockdate, "", new { @class = "text-danger" })
                                        <div class="text-danger">@ViewData["error"]</div>
                                        <script>
                                            function timeFunctionLong(input) {
                                                setTimeout(function () {
                                                    input.type = 'text';
                                                }, 60000);
                                            }</script>
                                    </div>

                                </div>
                                <div class="ln_solid"></div>
                                <div class="item form-group">
                                    <div class="col-md-6 col-sm-6 offset-md-3">
                                        <button type="button" class="btn btn-primary" onclick="GO()">Cancel</button>
                                        <script type="text/javascript">
                                function GO()
                                {
                                    window.location.href = "@Url.Action("Index", "Admin")";
                                }
                                        </script>

                                        <button type="submit" class="btn btn-success">Update</button>
                                    </div>
                                </div>

                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
}


